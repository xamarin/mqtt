<?xml version="1.0" encoding="utf-8"?>
<!--
	The MIT License (MIT)

	Copyright (c) 2015 Daniel Cazzulino

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
-->
<Project Sdk="CoreBuild/1.0.0-alpha" DefaultTargets="Rebuild" TreatAsLocalProperty="Configuration">

	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
		<PackageOutputPath Condition="'$(PackageOutputPath)' == ''">$(MSBuildProjectDirectory)\out</PackageOutputPath>
		 <!-- Whether to verify and initialize the target nuget feed before pushing as necessary. -->
    	<SleetInit>false</SleetInit>
    	<CommonBuildProperties>Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);GitSkipCache=true</CommonBuildProperties>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Sleet.Azure" Version="0.2.5" />
		<PackageReference Include="xunit.runner.msbuild" Version="2.3.1" />
	</ItemGroup>

	<ItemGroup>
		<Solution Include="src\Hermes.sln"  />
		<TestProject Include="src\Tests\Tests.csproj" />
		<TestProject Include="src\IntegrationTests\IntegrationTests.csproj" />
	</ItemGroup>

	<Target Name="Rebuild" DependsOnTargets="Clean;Restore;Build" />

	<Target Name="All" DependsOnTargets="Rebuild;Test" />

	<!-- Clean solutions -->
	<Target Name="Clean">
		<Exec Command="rmdir $(PackageOutputPath) /S /Q" Condition="Exists('$(PackageOutputPath)')" />
		<!-- Remove all bin/obj recursively under /src -->
		<Exec Command='for /d /r . %%d in (bin,obj) do @if exist "%%d" rd /s/q "%%d"'
			WorkingDirectory='$(MSBuildThisFileDirectory)\src' />  
		<Exec Command="rmdir src\.vs /S /Q" Condition="Exists('src\.vs')" />
	</Target>

	<Target Name="Delete" DependsOnTargets="_SleetConfigCreate">
		<Error Condition="'$(PackageId)' == ''" Text="No PackageId was specified for the Delete operation." />
		<Exec Condition="'$(PackageVersion)' == ''" Command='"$(Sleet)" delete --id "$(PackageId)" -f -s feed -c $(_SleetConfig)' />
		<Exec Condition="'$(PackageVersion)' != ''" Command='"$(Sleet)" delete --id "$(PackageId)" --version $(PackageVersion) -f -s feed -c $(_SleetConfig)' />
	</Target>

	<Target Name="_BeforeRestore" BeforeTargets="Restore" DependsOnTargets="Clean">
		<MakeDir Directories="$(TEMP)\packages" Condition="!Exists('$(TEMP)\packages')" />
	</Target>

	<Target Name="_RestoreSolutions" AfterTargets="Restore">
		<MSBuild Projects="@(Solution)" Targets="Restore" />
	</Target>

	<Target Name="Build">
		<MSBuild Projects="@(Solution)" Properties="$(CommonBuildProperties)" />
	</Target>
	
	<Target Name="Test">
		<MSBuild Projects="@(TestProject)" Properties="$(CommonBuildProperties)">
			<Output ItemName="TestAssembly" TaskParameter="TargetOutputs" />         
		</MSBuild>

		<xunit Assemblies="@(TestAssembly)" />
	</Target>
</Project>